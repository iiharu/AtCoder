
* C++ for AtCoder 

** 注意
- モチベーションを維持するためにコードをアップするレポジトリ.
- コンテスト中にアップはしない.
- コードは自分で解いたものと解説を見て解いたものがごっちゃになってます.

** Requirements
- C++ Compiler
  - GNU Compiler Collection (g++)
  - LLVM Clang Compiler (clang++)
- GNU Make (make)

*** Optional Requirements
- CMake (cmake)

In Debian GNU/Linux:
#+BEGIN_SRC shell
$ sudo apt install g++ make
$ sudo apt install cmake # optional
#+END_SRC


** Libraries
- C++ Standard Library (C++14)

*** Standard Template Library
- std::max_element, std::min_element

#+BEGIN_SRC C++
std::vector<int> vec(100);
for (size_t i = 0; i < vec.size(); ++i) vec[i] = i;
std::random_shuffle(vec.begin(), vec.end());

int min = *std::min_element(vec.begin(), vec.end());
int max = *std::max_element(vec.begin(), vec.end());

std::vector<int>::iterator minIt = std::min_element(vec.begin(), vec.end());
std::vector<int>::iterator maxIt = std::max_element(vec.begin(), vec.end());

size_t minIndex = std::distance(vec.begin(), vec.end());
size_t maxIndex = std::distance(vec.begin(), vec.end());
#+END_SRC

- std::copy
#+BEGIN_SRC C++
std::vector<int> vec(100);
for (size_t i = 0; i < vec.size(); ++i) vec[i] = i;
std::random_shuffle(vec.begin(), vec.end());

std::ostream_iterator<int> out_it (std::cout, ", ");
std::copy(vec.begin(), vec.end(), out_it);
#+END_SRC



** Templates
*** Macros
#+BEGIN_SRC C++
// #define rep(i, n) for(int i = 0; i < (int)(n); i++)
// #define all(a) (a).begin(),(a).end()
// #define UNIQUE(v) v.erase(unique(v.begin(), v.end()), v.end());
#+END_SRC


** Reference

- [[https://en.cppreference.com/][C++ Reference]]
- [[https://cpprefjp.github.io/][C++ 日本語リファレンス]]

